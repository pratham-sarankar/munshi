# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#     https://docs.fastlane.tools/plugins/available-plugins
#

default_platform(:ios)

platform :ios do

  desc "Build the iOS app using Flutter (local only)"
  lane :build do
    # 1Ô∏è‚É£ Prepare Flutter project
    sh "flutter clean"
    sh "flutter pub get"

    # 2Ô∏è‚É£ Build the release IPA for App Store distribution
    sh "flutter build ipa --release --no-tree-shake-icons --export-method app-store"

    # 3Ô∏è‚É£ Output location
    sh "echo '‚úÖ IPA built successfully! Find it under build/ios/ipa/Runner.ipa'"
  end


  desc "üöÄ Build and upload a new TestFlight build"
  lane :beta do
    # Create and unlock a temporary keychain for CI
    create_keychain(
      name: "temp_keychain",
      password: ENV['MATCH_PASSWORD'],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )

    # Fetch signing certificates & provisioning profiles
    match(
      type: "appstore",
      readonly: true,
      git_basic_authorization: ENV['MATCH_GIT_BASIC_AUTHORIZATION'],
      keychain_name: "temp_keychain",
      keychain_password: ENV['MATCH_PASSWORD']
    )

    # Clean, get dependencies, and build the Flutter IPA
    sh "flutter clean"
    sh "flutter pub get"
    sh "pod install --repo-update"
    sh "flutter build ipa --release --no-tree-shake-icons --export-method app-store --verbose"

    # # Locate the generated IPA
    ipa_path = "../build/ios/ipa/munshi.ipa"

    app_store_connect_api_key(
      key_id: "6W3U9Q7XKG",
      issuer_id: "bca83270-a27f-4398-aceb-2bdb17bff2a2",
      key_filepath: "./AuthKey_6W3U9Q7XKG.p8",
      duration: 1200, # optional (maximum 1200)
      in_house: false 
    )


    # Upload to TestFlight
    pilot(
      ipa: ipa_path,
      skip_waiting_for_build_processing: false, # waits until Apple processes it
      distribute_external: false                # change to true if you want to send to external testers
    )

    delete_keychain(name: "temp_keychain")

    sh "echo 'üéâ Successfully uploaded build to TestFlight!'"
  end

end
